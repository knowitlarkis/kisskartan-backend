// <auto-generated />
using System;
using KissKartan.API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KissKartan.API.Migrations
{
    [DbContext(typeof(ToiletContext))]
    partial class ToiletContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("KissKartan.API.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stars")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ToiletId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ToiletId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("KissKartan.API.Models.Toilet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFree")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastCleaned")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Toilets");
                });

            modelBuilder.Entity("KissKartan.API.Models.TypeProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ToiletId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ToiletId");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("KissKartan.API.Models.Rating", b =>
                {
                    b.HasOne("KissKartan.API.Models.Toilet", "Toilet")
                        .WithMany()
                        .HasForeignKey("ToiletId");

                    b.Navigation("Toilet");
                });

            modelBuilder.Entity("KissKartan.API.Models.TypeProperty", b =>
                {
                    b.HasOne("KissKartan.API.Models.Toilet", null)
                        .WithMany("Types")
                        .HasForeignKey("ToiletId");
                });

            modelBuilder.Entity("KissKartan.API.Models.Toilet", b =>
                {
                    b.Navigation("Types");
                });
#pragma warning restore 612, 618
        }
    }
}
